namespace LOCO;

table Category {
  id:int;
  name:string;
  supercategory:string;
}

table Track {
  track_id:int;
  category_id:float;
  track_len:int;
  steps:[int];
}

table Image {
  id:int;
  file_name:string;
  height:int;
  width:int;
}
struct Bbox {
  x:float;
  y:float;
  w:float;
  h:float;
}

table Position {
  // x coord of the agent
  x:float;
  // y coord of the agent
  y:float;
  // z coord of the agent
  z:float;
  // azimuth angle of the agent
  theta:float;
  // elevation angle of the agent
  phi:float;
}

//Annotation containing position of detection in the frame
table Annotation {
  // id of the annotation
  id:int; 
  
  // image in which the detection was present
  image_id:int;
  // category of the detection
  category_id:float;
  // bounding box of the detection in yolo format
  bbox:Bbox;
  // area of the bounding box
  area:float;
  // semantic segmentation data
  segmentation:[ubyte];
  // crowd information
  iscrowd:int;
  // track id
  track_id:int;
  // index of the track in global trackmap
  trackmap_index:int;
  // id of the video
  vid_id:int;
  /// color of the track for rendering
  track_color:[int];
  // displacement flag
  is_displaced:bool;
  // confidence in a detection, between 0 and 1
  confidence:float;
  // error between prediction and actual detection
  error:float;
  // id for the agent state
  state_id:int;

  is_prediction:bool;

  position:Position;
  // distance??
  distance:float;
}


// State of the agent at a point in time
table State {
  position:Position;
  orientation:float;
  time_stamp:int;
}

table SensorParameters {
  fov_radius:int;
  fov_width:float;
}

table TopLoco {
  constants:[ubyte] (flexbuffer);
  categories:[Category];
  trackmap:[int];
  linked_tracks:[Track];
  images:[Image];
  annotations:[Annotation];
  states:[State];
  sensor_params:SensorParameters;
}

root_type TopLoco;